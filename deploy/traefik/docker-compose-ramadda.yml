version: '3'

services:
  reverse-proxy:
    # The official v2.0 Traefik docker image
    image: traefik
    # Enables the web UI and tells Traefik to listen to docker
    command: --providers.docker --log
    ports:
      # The HTTP port
      - "80:80" # change the host port to other if using other webserver
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
        #- $PWD/traefik.toml:/etc/traefik/traefik.toml


  ramadda:
    image: suvarchal/ramadda-geoscience:update

    # mount a directory to store repository data 
    expose:
      - "8080"
    labels:
      - traefik.docker.network=traefik_default
      - traefik.backend=ramadda
      #- traefik.port=8080
      - traefik.http.routers.ramadda.rule=Host(`localhost`)
      - traefik.http.routers.ramadda.rule=PathPrefix(`/repository`)

    depends_on:
      - reverse-proxy


  nbapp:
    image: suvarchal/nbapp:latest  
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp:/tmp
    user: "1000:133" # use gid of docker, can be obtained from shell command id
    expose:
      - "5000"
    environment:
      - JUPYTER_CONTAINER=suvarchal/drilsdown # use any valid jupyter notebook container
      - CULL_IDLE_TIMEOUT=120 # remove idle notebooks after N seconds
      - RAMADDA_BASE_URL=http://weather.rsmas.miami.edu/repository 
      - NOTEBOOK_HOST=localhost

    # - FLASK_APP=app.py # only for debug
    # - FLASK_DEBUG=1    # only for debug

    #command: ['python','app.py'] #only for debug
    labels:
      - traefik.docker.network=traefik_default
      - traefik.http.routers.nbapp.rule=Host(`localhost`)
      - traefik.http.routers.nbapp.rule=PathPrefix(`/notebook`)
    
#    networks:
#      - traefik_default
#      - default

    depends_on:
      - reverse-proxy
      - redis

  redis:
    image: redis
    expose:
      - "6379"
#    networks:
#      - traefik_default
    command: redis-server --appendonly yes

